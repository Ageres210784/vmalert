---
- name: Ensure config directory
  file:
    state: directory
    path: "{{ vmalert_config_dir }}/templates"
    mode: 0755
    owner: root
    group: root

- name: Ensure templates files
  copy:
    src: "{{ item }}"
    dest: "{{ vmalert_config_dir }}/templates/{{ item | basename }}"
    mode: 0644
    owner: root
    group: root
  # Fileglob always operates started from 'files' dir, so move to 'templates'
  # explicitly
  with_fileglob:
    - templates/*.yml
  notify:
    - Reload vmalert

- name: Ensure additional templates files
  copy:
    content: "{{ item.data | to_nice_yaml(indent=2) }}"
    dest: "{{ vmalert_config_dir }}/templates/{{ item.filename }}"
    mode: 0644
    owner: root
    group: root
  with_items: "{{ vmalert_additional_alerts }}"
  notify:
    - Reload vmalert

- name: Start docker vmalert container
  docker_compose:
    state: present
    project_name: vmalert
    definition:
      version: '2'
      services:
        vmalert:
          image: "{{ vmalert_docker_image }}"
          container_name: "{{ vmalert_container_name }}"
          ports:
            - "{{ vmalert_address }}:8880:8880"
          volumes:
            - "{{ vmalert_config_dir }}/templates:/etc/alerts"
          hostname: "{{ vmalert_container_name }}"
          restart: always
          labels: "{{ vmalert_docker_labels }}"
          command: "{{ vmalert_command }}"

      networks:
        default:
          external:
            name: "{{ vmalert_docker_network_name }}"
  when: not vmalert_swarm_cluster or vm_swarm_manager is undefined

- name: Deploy vmalert to docker swarm
  block:
    - name: Ensure pip installation
      package:
        name: "python3-pip"
        state: present

    - name: Install newer version of pip itself
      pip:
        name: "pip"
        state: latest
        executable: pip3

    - name: Install jsondiff from pip
      pip:
        name: "jsondiff"
        state: present
        executable: pip3

    - name: Deploy docker vmalert container in swarm
      community.docker.docker_stack:
        state: present
        name: "{{ vmalert_stack_name }}"
        compose:
          - version: '3.5'
            services:
              vmalert:
                image: "{{ vmalert_docker_image }}"
                command: "{{ vmalert_command }}"
                hostname: "{{ vmalert_container_name }}"
                labels: "{{ vmalert_docker_labels }}"
                volumes:
                  - "{{ vmalert_config_dir }}/templates:/etc/alerts"
                deploy: "{{ vmalert_swarm_deploy }}"
            networks:
              default:
                external:
                  name: "{{ vmalert_docker_network_name }}"
  delegate_to: "{{ vm_swarm_manager }}"
  when:
    - vmalert_swarm_cluster
    - vm_swarm_manager is defined
